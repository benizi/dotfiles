#!/bin/zsh
unset dry
unset cycle scale no_ext check_connections
toggle=0
ext_pos=--right-of
[[ -f ~/.config/mon ]] && . ~/.config/mon
case $0 in
	*clone) set -- "$@" --clone ;;
	*single) set -- "$@" --single ;;
	*toggle) set -- "$@" --toggle ;;
esac
for arg ; do
	case "$arg" in
		--dry*) dry=true ;;
		--cycle) cycle=true ;;
		--clone) ext_pos=--same-as ; cycle=true ;;
		--single) no_ext=true ;;
		--toggle) ((toggle++)) ;;
		--no-toggle) ((toggle--)) ;;
		-l|--left) ext_pos=--left-of ;;
		-r|--right) ext_pos=--right-of ;;
		-a|--above) ext_pos=--above ;;
		-b|--below) ext_pos=--below ;;
		--check) check_connections=true ;;
		*)
			tput setaf 1 >&2
			printf 'Unknown option: %s\n' "$arg"
			tput sgr0 >&2
			exit 1
			;;
	esac
done

if (( $toggle )) ; then
	if xrandr | awk '/[*]/ { total++ } END { exit total == 1 ? 0 : 1 }'
	then exec $0 --no-toggle
	else exec $0 --no-toggle --single
	fi
fi

typeset -a outputs
typeset -A active_output vid_modes

get_modes () {
	outputs=()
	active_output=()
	vid_modes=()
	eval "$(xrandr | perl -lanwe '
if (/^[A-Za-z]+\d+ (dis|)connected/) {
	$last_output = $F[0];
	push @outputs, $last_output;
	print qq/active_output+=( $last_output 1 )/ if /^\S+ connected/;
	$last_ok = 1
}
elsif (/^ *[0-9]+x[0-9]+/) {
	print qq/outputs+=( $last_output )/ unless $modes{$last_output};
	$modes{$last_output} //= $F[0];
	$last_ok = 1
}
else { $last_ok = 0 }
END {
	for my $output (grep $modes{$_}, @outputs) {
		print qq/vid_modes+=( $output "$modes{$output}" )/;
	}
}')"
}

get_modes

deactivate=()
int=$outputs[1]
int_mode=$vid_modes[$int]
if (( $#active_output > 1 )) && (( ! $+no_ext )) ; then
	for ext in ${outputs[2,-1]} ; do
		(( $+active_output[$ext] )) || continue
		ext_mode=$vid_modes[$ext]
		break
	done
else
	for mon in $outputs ; do
		[[ $mon == $int ]] || deactivate+=( $mon )
	done
fi

if (( $+check_connections )) ; then
	xrandr | awk '
/^[^[:space:]]+ / { last_con = $2 }
/^ +[0-9]/ {
	if (last_con == "disconnected")
		exit 1
}'
	exit $?
fi

scale=1x1
unset fb

cmd=( xrandr --output $int --primary --mode $int_mode )
(( $+int_dpi )) && cmd+=( --dpi $int_dpi )
if [[ -n $ext ]] ; then
	if [[ $int_mode == $ext_mode ]] || [[ $ext_pos != --same-as ]] ; then
		cmd+=( --output $ext $ext_pos $int --mode $ext_mode )
	else
		case $int_mode/$ext_mode in
			1920x1080/1920x1200) scale=1x.9 ; fb=$int_mode ;;
			*) scale=$(( ${int_mode%x*}.0 / ${ext_mode%x*} ))x$(( ${int_mode#*x}.0 / ${ext_mode#*x} )) ; fb=$int_mode ;;
		esac
		cmd+=( --output $ext $ext_pos $int --mode $ext_mode )
	fi
	(( $+ext_dpi )) && cmd+=( --dpi $ext_dpi )
else
	fb=$int_mode
fi

if (( $+cycle )) ; then
	for output in $outputs ; do
		${dry+echo} xrandr --output $output --off
	done
fi

(( $+fb )) && cmd[2,1]=( --fb $fb )
(( $+scale )) && cmd+=( --scale $scale )

for mon in $deactivate ; do
	cmd+=( --output $mon --off )
done
${dry+echo} $cmd
