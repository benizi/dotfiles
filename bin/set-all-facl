#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long;
my @perms;
my @web_users = qw/wwwrun apache httpd lighttpd nginx/;
my @args;
my $permbits;
my $mask;
GetOptions(
	'permbit=s' => \$permbits,
	'n|dry-run' => \(my $dry = 0),
	'verbose+' => \(my $verbose = 0),
	'defaults!' => \(my $defaults = 1),
	'sudo!' => \(my $do_sudo = 1),
	'recurse|recursive|R!' => \(my $recursive = 0),
	'u|user' => \(my $do_current_user = 0),
	'g|group' => \(my $do_current_group = 0),
	'w|webusers|webservers' => \(my $do_web_users = 0),
	'mask' => \$mask,
	'<>' => sub {
		for (@_) {
			/^[dug]:/ ? (push @perms, $_) :
			/^o::/ ? (push @perms, $_) :
			/^m::/ ? ($mask = $_) :
			(/^:(...)$/ or /^([r\-][w\-][x\-])$/i) ? ($permbits = $1) :
			push @args, $_;
		}
	},
) or die 'options';
unless (@perms or $permbits) {
	warn "(Default perms = --user)\n";
	$do_current_user = 1;
}
push @perms, $mask // 'm::rwx';
push @perms, grep $do_current_user, "u:".getpwuid $<;
push @perms, grep $do_current_group, "g:".getgrgid $(;
if ($do_web_users) {
	my @web_perms = map "u:$_", grep scalar getpwnam $_, @web_users;
	push @perms, map "$_:".($permbits // 'r-X'), @web_perms;
}
@perms = map {; ("d:$_", $_) } @perms if $defaults;
$permbits //= 'rwX';
/^(?:d:.*:.*:.*|[ugm]:.*:.*|o::...)$/ or $_ .= ":$permbits" for @perms;
@perms or die "No default/user/group permissions specified\n";
@args or die "No files/directories specified\n";
my (@dirs, @files);
(-d) ? (push @dirs, $_) : (push @files, $_) for @args;

sub print_cmd {
	print "=== CMD\n";
	print "[$_]=$_[$_]\n" for 0..$#_;
}

sub run_cmd {
	my @cmd = @_;
	$< and $do_sudo and @cmd = ( sudo => @cmd );
	print_cmd @cmd if $dry or $verbose;
	system { $cmd[0] } @cmd unless $dry;
}

-f or run_cmd touch => $_ for @files;

for (
	[ 1, @files ],
	[ 0, @dirs ],
) {
	my ($filter_defaults, @paths) = @$_;
	next unless @paths;
	my @use_perms = @perms;
	@use_perms = grep !/^d:/, @use_perms if $filter_defaults;
	run_cmd setfacl =>
		grep($recursive, '-R'),
		-m => join(',', @use_perms),
		@paths;
}
