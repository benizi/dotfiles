#!/usr/bin/env ruby

contents = $stdin.read
lines = contents.lines.to_a

def password
  `git config filter.encryptedjs.password || true`.chomp
end

if (lines[0] || '') !~ /^benizi/ || password.empty?
  # Already cleaned or no password
  $stdout.write(contents)
  exit
end

base64 = lines[1..-2].map { |line| line.sub(/^"/, '').sub(/\\n" \+/, '') }.join

decoded = ''
IO.popen(%Q{openssl enc -d -a -blowfish -pass #{password}}, 'r+') do |io|
  io.write base64
  io.close_write
  first_line = io.gets.chomp
  abort "Bad decode (First line: #{first_line})" unless first_line == '//OK'
  decoded = io.read
end

puts decoded
