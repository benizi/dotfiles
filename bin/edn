#!/usr/bin/env cljs
(ns com.benizi.cljs.edn-to-json
  (:require [cljs.reader :refer (read-string)]))

(defn read-chunker [dest]
  (fn [data] (swap! dest str data)))

(defn converter [input]
  (fn []
    (let [edn (read-string @input)
          json (->> edn clj->js (.stringify js/JSON))
          puts (fn [s] (.write (.-stdout js/process) s))
          output (fn [s] (dorun (map puts [s "\n"])))]
      (output json))))

(let [input (atom "")
      stdin (.-stdin js/process)]
  (.on stdin "data" (read-chunker input))
  (.on stdin "end" (converter input)))
