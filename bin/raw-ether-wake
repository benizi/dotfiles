#!/usr/bin/env python
#
# Send a raw ethernet "Wake On LAN" magic packet (type = 0x0842)
#
# Original code from: http://www.cnpbagwell.com/mac-os-x/bonjour-sleep-proxy
# Copyright (c) 2013 Chris Bagwell

import argparse
from socket import socket, AF_PACKET, SOCK_RAW
import sys

class Waker(object):
    ether_type = bytearray.fromhex('0842')
    magic_addr = bytearray.fromhex('ff' * 6)

    def __init__(self, opts):
        self.dst_addr = self.get_hex(opts.dst)
        self.src_addr = self.get_hex(opts.src or self.magic_addr.hex())
        self.if_name = opts.interface

    def get_hex(self, addr):
        addr = ''.join([c for c in addr if c in '0123456789abcdef'])
        return bytearray.fromhex(addr)

    def get_sock(self):
        s = socket(AF_PACKET, SOCK_RAW)
        s.bind((self.if_name, 0))
        return s

    def frame(self):
        payload = self.magic_addr + (self.dst_addr * 16)
        return self.dst_addr + self.src_addr + self.ether_type + payload

    def send(self):
        self.get_sock().send(self.frame())

def parse_args(argv):
    parser = argparse.ArgumentParser(description='Send a Wake-On-LAN packet')
    parser.add_argument('--dst', '--target', '-t')
    parser.add_argument('--src', '-s')
    parser.add_argument('--interface', '--if')
    parser.add_argument('--debug', '-d', action='store_true')
    return parser.parse_args(argv)

def main(argv):
    opts = parse_args(argv)
    waker = Waker(opts)
    if opts.debug:
        sys.stdout.buffer.write(waker.frame())
    else:
        waker.send()

if __name__ == '__main__':
    main(sys.argv[1:])
