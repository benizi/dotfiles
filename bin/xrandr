#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long qw/:config pass_through/;
GetOptions(
	'raw' => \(my $no_mods = 0),
	'dry-run|dry' => \(my $dry = 0),
) or die 'options';
$no_mods or GetOptions(
	'home' => \(my $home = 0),
	'work|mr|medrespond' => \(my $medrespond = 0),
	'single' => \(my $single = 0),
	'small' => \(my $small = 0),
	'huge' => \(my $huge = 0),
	'netbook' => \(my $netbook = `uname -a | grep Atom`),
	'nolcd' => \(my $no_lcd = 0),
	'mode=s' => \(my $mode = ''),
	'restart-enlightenment|re!' => \(my $restart_e = $ENV{E_IPC_SOCKET}?1:0),
	'matched' => \(my $matched = 0),
	'dpi=i' => \(my $dpi = 0),
) or die 'options';
shift @ARGV if @ARGV and $ARGV[0] eq '--';
my ($this) = join ":", (stat $0)[0,1];
my @cmd;
for (split /:/, $ENV{PATH}) {
	my $xrandr = "$_/xrandr";
	next unless -f $xrandr;
	next if join(":", (stat $xrandr)[0,1]) eq $this;
	push @cmd, $xrandr;
	last;
}
die "Real xrandr not found\n" unless @cmd;
sub do_it {
	my @cmd = @_;
	print "@cmd\n";
	return if $dry;
	system { $cmd[0] } @cmd;
}
do_it @cmd, @ARGV or exit if $no_mods;
my $changing = ($home or $medrespond or $single);
if ($changing) {
	my $rate = $medrespond ? '60' : '84.1';
	my $lcd = $matched ? '1024x768' : '1280x800';
	$lcd = '1024x600' if $netbook;
	$no_lcd ||= $home && $netbook && $huge;
	$lcd = '' if $no_lcd;
	my @size_and_lcd = (qw/--size auto/);
	push @size_and_lcd, qw/--output LVDS --mode/, $lcd if $lcd;
	my $position = '--left-of';
	if ($home) {
		if ($matched || $small) {
		} elsif ($huge) {
			$mode ||= '1856x1392';
		} elsif ($netbook) {
			$mode ||= '1280x960';
			$position = '--above';
			$dpi ||= 100;
		} else {
			$mode ||= '1280x960';
		}
	} else {
		$mode ||= '1024x768';
	}
	$dpi ||= 90;
	my @external = (qw/--output VGA/,
		$single ? (qw/--off/) :
		('--rate', $rate, '--mode', $mode, $position, qw/LVDS/)
	);
	push @cmd, @size_and_lcd, @external, '--dpi', $dpi;
	push @cmd, qw/--output LVDS --off/ if $no_lcd;
}
push @cmd, @ARGV;
do_it @cmd;
do_it qw/enlightenment_remote -restart/ if $restart_e and $changing;
