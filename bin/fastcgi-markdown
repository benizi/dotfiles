#!/usr/bin/env ruby
require 'redcarpet'
require 'socket'
require 'fcgi'
require 'cgi'

class FCGI
	def self::default_connection
		@server ||=
			begin
				sock = "/var/run/nginx.markdown-fcgi.sock"
				File.unlink(sock) rescue nil
				server = UNIXServer.new(sock)
				system("set-all-facl -w :rwX #{sock}")
				server
			end
	end
end

$stderr.puts "Ready?"

FCGI.each do |req|
	o = req.out
	file = req.env['SCRIPT_FILENAME']
	$stderr.puts "Request for #{file}"
	params = req.env['QUERY_STRING'] ? CGI::parse(req.env['QUERY_STRING']) : {}
	if params.has_key?('source')
		o.print "Content-Type: text/plain\r\n\r\n"
		o.puts File.open(file).read
	else
		begin
			rendered = %x{ruby ~bhaskell/bin/markdown.rb --no-additions --github-style --title #{File.basename(file)} #{file}}
			o.print "Content-Type: text/html\r\n\r\n"
			o.print rendered
		rescue Exception => e
			o.print "Content-Type: text/plain\r\n\r\n"
			o.puts "Error rendering as Markdown"
			o.puts "Error message: #{e}"
		end
	end
	req.finish
end

=begin
FCGI.each_cgi do |cgi|
	puts cgi.header
	puts "YAY"
end
=end
