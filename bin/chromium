#!/bin/zsh
case $0 in
	*.*) _profile=$0:e ;;
	*chromium*) ;;
	*) _profile=$0:t ;;
esac
function warn () { echo "\e[31m$*\e[0m" >&2 }
function die () { warn $* ; exit 1 }
_dry=false
_plugins=true
unset _url _ua
_logging=false
_userscripts=true
_ipv6=true
_args=()
_flags=( plugins logging user-scripts ipv6 )
while [ $# -gt 0 ] ; do
	arg=$1 ; shift
	for l in $_flags ; do
		_found=true
		alt=${l//-}
		#local -a yes no
		yes=( -{,-}{$l,$alt} )
		no=( -{,-}no{,-}{$l,$alt} )
		case $arg in
			${~${(j:|:)yes}}) eval "_$alt=true" ;;
			${~${(j:|:)no}}) eval "_$alt=false" ;;
			*) _found=false ;;
		esac
		$_found && break
	done
	$_found && continue
	case "$arg" in
		-profile*|--profile*) _profile=${arg/*=}
			if [ "$arg" = "$_profile" ] ; then _profile="$1" ; shift ; fi
			[ -z "$_profile" ] && die "Bad argument: $arg" ;;
		--firefox) _ua='Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.4) Gecko/20100527 SUSE/3.6.4-2.2 Firefox/3.6.4' ;;
		--default) _profile=Default ;;
		-dry|--dry) _dry=true ;;
		http:*|https:*|ftp:*) _url=$arg ;;
		*) _args+=( $arg ) ;;
	esac
done
: ${_profile=Default}
: ${_profdir=$_profile}
if ! [[ $_profdir = */* ]] ; then
	for loc in google-chrome chromium ; do
		_profdir=$HOME/.config/$loc/$_profile
		[[ -e $_profdir ]] && break
	done
	[[ $_profile = Default ]] && _profdir=$_profdir:h
fi
_logext=$_profdir:t
_args+=( --user-data-dir=$_profdir )
(( $+_ua )) && _args+=( --user-agent=$_ua )
: ${_plugins=true}
: ${_logext=default}
for flag in $_flags ; do
	${(P)${:-_${flag//-}}} && _args+=( --enable-$flag ) || _args+=( --disable-$flag )
done
_echo=()
$_dry && _echo=(echo)
[[ -n "$_url" ]] && _args+=( --remote "$_url" )
unset exe
if [[ -f /opt/google/chrome/chrome ]] ; then
	exe=/opt/google/chrome/chrome
else
	path=( ${path/${${(%):-"%x"}:h}} )
	for command in chromium chromium-bin chrome ; do
		(( $+commands[$command] )) || continue
		exe==$command
		break
	done
fi
(( $+exe )) || { echo "Couldn't find chromium/chrome" >&2 ; exit 1 }
_cmd=( $_echo exec $exe $_args )
if $_logging ; then
	_logfile=~/logs/errors-chromium-${_logext}-$(date +%Y-%m-%d-%H%M%S)
	if $_dry ; then
		echo LOG file: $_logfile
		echo $_cmd
	elif (( $+commands[tai64n] )) ; then
		$_cmd |& tai64n > $_logfile
	else
		$_cmd |& perl -pwe '$|=1; s/^/time . "\t"/e' > $_logfile
	fi
else
	$_cmd
fi
