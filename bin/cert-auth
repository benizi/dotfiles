#!/bin/sh

set -e

: ${tld=self}
: ${ca=ca.$tld}
: ${bits=4096}
: ${O=benizi}
: ${OU=WWW}

test $# -gt 0 || set -- host1 host2

has_cmd() {
  hash "$1" 2>/dev/null
}

# driver for all of this
has_cmd cfssl
# for splitting resulting certs
has_cmd cfssljson
# for generating JSON configuration
has_cmd edn

host_config() {
  edn <<CA_CSR_EDN
{
  CN $1
  key {algo rsa size $bits}
  names [{C US, ST Pennsylvania, L Pittsburgh, O "$O", OU "$OU"}]
}
CA_CSR_EDN
}

host_config $ca |
tee req.$ca.json |
cfssl genkey -initca - |
tee genkey.$ca.json |
cfssljson -bare $ca

for shortname
do
  test x$shortname != x-- || continue
  host=$shortname.$tld
  host_config $host |
  tee req.$host.json |
  cfssl gencert \
    -ca $ca.pem \
    -ca-key ${ca}-key.pem \
    -hostname=$host \
    - |
  cfssljson -bare $host
done
