#!/usr/bin/perl
use strict;
use warnings;
use IPC::Run 'run';
use Getopt::Long;
GetOptions(
	'client|c=s' => \my $client,
	'server|s' => \(my $server = 0),
	'kill|k' => \(my $just_kill = 0),
	'host=s' => \(my $host = 'localhost'),
	'port=i' => \(my $port = 24800),
) or die 'options';
$client ||= 1 unless $server;
my $cs = $client ? 'c' : 's';
my $synergy = "synergy$cs";

sub my_kill {
	@_ = @_ ? (@_) : ($_);
	run "sudo kill -9 $_" for @_;
}

my %ppids;
{
	chomp(my @pstree = reverse readpipe "pstree -aclpu");
	my $max;
	my $seen = 0;
	for (@pstree) {
		my ($pref, $proc, $pid) = /^([\s\|\-\`]*)([^\s,]+),(\d+)/;
		next unless defined $pid;
		($seen, $max) = (1, length $pref) if $pid == $$;
		next unless $seen;
		next unless $max > length $pref;
		$ppids{$pid}++;
		$max = length $pref;
	}
}

if ($just_kill) {
	chomp(my @procs = readpipe "sudo lsof -i :$port -Fp");
	s/^p// for @procs = grep /^p/, @procs;
	@procs = grep !$ppids{$_}, @procs;
	my_kill for @procs;
	my $es = @procs == 1 ? "" : "es";
	print "Killed ", 0 + @procs, " old Synergy process$es: @procs\n";
	system { 'killall' } qw/killall synergyc/;
	exit;
}

my @s_args = ('-f');
push @s_args, '-n', $client if $client and $client ne '1';
push @s_args, join ':', $host, $port if $client;
exec { $synergy } $synergy, @s_args;
die 'Failed to exec('.join(', ', $synergy, @s_args).")\n";
