#!/usr/bin/perl
use 5.016;
use warnings;
use IPC::Run 'run';
use Sys::Hostname;
use Getopt::Long;
GetOptions(
	'kill|k' => sub { warn "The -k/--kill flag is deprecated\n" },
	'port=i' => \(my $port = 24800),
	'dry-run+' => \(my $dry = 0),
) or die 'options';

my $running_remotely = $0 eq '-';
die "Don't specify hosts if running remotely\n" if @ARGV and $running_remotely;
my @hosts = (@ARGV or $running_remotely) ? (splice @ARGV) : ('_');

sub lines {
	my $out;
	run @_, '>', \$out, '2<&-';
	chomp(my @lines = split $/, $out);
	@lines
}

sub my_kill {
	return unless @_;
	my @cmd = (qw/sudo kill -9/, @_);
	unshift @cmd, 'echo' if $dry;
	say for lines \@cmd;
}

sub kill_local {
	my %ppids;
	my @pstree = reverse lines [qw/pstree -aclpu/];
	my $max;
	my $seen = 0;
	for (@pstree) {
		my ($pref, $proc, $pid) = /^([\s\|\-\`]*)([^\s,]+),(\d+)/;
		next unless defined $pid;
		($seen, $max) = (1, length $pref) if $pid == $$;
		next unless $seen;
		next unless $max > length $pref;
		$ppids{$pid}++;
		$max = length $pref;
	}

	printf "\n== %s ==\n", hostname;
	my @lsof = qw/sudo lsof -Fp/;
	push @lsof, -i => ":$port";
	push @lsof, -c => $_ for qw/synergys synergyc/;
	my @procs = grep !$ppids{$_}, map s/^p// ? $_ : (), lines [@lsof];
	my_kill @procs;
	my $tag = $dry ? '[DRY RUN] ' : '';
	my $es = @procs == 1 ? "" : "es";
	my $list = @procs ? ": @procs" : "";
	say $tag, "Killed ", 0 + @procs, " old Synergy process", $es, $list;
}

my $this_script = do {
	undef local $/;
	seek DATA, 0, 0;
	<DATA>
};

sub kill_remote {
	my $host = shift // $_;
	my @cmd = (ssh => $host, qw/perl - --port/, $port, ('--dry') x $dry);
	say "  => @cmd";
	return if $dry > 1;
	say for lines \@cmd, '<', \$this_script;
}

sub main {
	kill_local;
	kill_remote for @hosts;
}

main();

# __DATA__ needed to send script text to remote hosts
__DATA__
