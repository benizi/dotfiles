#!/usr/bin/env perl
use File::Find;
use File::Spec;
use POSIX qw/getcwd/;
use 5.016;
use open ':std', ':utf8';
use utf8;

my $line_drawing = 1;

# s_ = sub, k_ = kid, mid = not last, end = last
my @drawing = qw/
  s_end        
  s_mid |   │  
  k_mid |-- ├──
  k_end `-- └──
/;

shift while @ARGV and $ARGV[0] =~ /^-/;

my %tree;
my $root = shift;

find {
  wanted => sub {
    return if $_ eq '.';
    my $rel = File::Spec->abs2rel($File::Find::dir, $root);
    $rel = $rel eq '.' ? '' : "/$rel";
    my $name = -l ? "$_ -> ".(readlink($_)//"(ENOPERM)") : $_;
    push @{$tree{$rel}}, $name;
  },
}, $root;

my %chars;
while (@drawing) {
  my ($name, @versions) = splice @drawing, 0, 3;
  for ($versions[$line_drawing]) {
    y/\xa0/ /;
    s/$/ /;
    $chars{$name} = $_;
  }
}

sub print_tree {
  my ($prefix, $location) = (@_, "", "");
  my @kids = sort @{$tree{$location}};
  while (@kids) {
    my $kid = shift @kids;
    my $pos = @kids ? 'mid' : 'end';
    my $kid_pre = $chars{"k_$pos"};
    my $sub_pre = $chars{"s_$pos"};
    say $prefix, $kid_pre, $kid;
    my $sub = "$location/$kid";
    next unless exists $tree{$sub};
    print_tree($prefix . $sub_pre, $sub);
  }
}

say $root;
print_tree;
