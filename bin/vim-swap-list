#!/usr/bin/env ruby
require 'etc'
require 'json'

user_dir = "~#{Etc.getlogin}/"
io = IO.popen({'LC_ALL'=>'POSIX'}, %w[vim -r], err: [:child, :out])
io.readlines.map(&:rstrip).reject(&:empty?).slice_when do |a,b|
  b =~ /^\s+In (?:current )?directory/
end.each do |set|
  next if set.empty? or set.first !~ /^\s+In/
  next if set.last =~ /-- none --$/
  dir_line = set.shift.strip
  dir =
    case dir_line
    when 'In current directory:' ; then '.'
    else dir_line.sub(/^In directory /, '').sub(/:$/, '')
    end
  set.slice_when { |_,line| line =~ /^\d+\./ }.each do |f|
    f.map do |line|
      case line.strip
      when /^(\d+)\.\s+(.+?)$/
        {n: $1.to_i, swapfile: $2}
      when /^owned by:\s(.+?)\s+dated:\s+(.+?)$/
        {owner: $1, date: $2}
      when /^dated:\s+(.+?)$/
        {date: $1}
      when /^file name:\s+(.+?)$/
        {file: $1.sub(user_dir, '~/')}
      when /^user name:\s+(.+?)\s+host name:\s+(.+?)$/
        {user: $1, host: $2}
      when /^modified:/
        {modified: !!line[/YES/]}
      when /^process ID:\s+(\d+)/
        {pid: $1.to_i, running: !!line[/(?:still running|STILL RUNNING)/]}
      else
        $stderr.puts "NO INFO ON:\n  #{line}"
        {}
      end
    end.tap do |rows|
      info = rows.reduce({dir: dir}, :merge)
      info.merge!(display: [info[:file], info[:pid]].join("\t"))
      puts info.to_json
    end
  end
end
