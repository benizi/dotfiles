normal_history_mode () {
  setopt extended_history
  setopt hist_ignore_dups hist_ignore_space hist_no_store
  setopt inc_append_history
  HISTSIZE=50000000
  SAVEHIST=$HISTSIZE
  if (( UID )) ; then
    HISTFILE=~/.historyfile
  else
    HISTFILE=$zsh_dirs[-1]/$LOGNAME.historyfile
    [[ ! -f $HISTFILE ]] && touch $HISTFILE && chown --reference=${(%):-%N} $HISTFILE
  fi
  TRAPUSR1 () { fc -W $zsh_dirs[-1]/emergency-zsh-backup-$(date +%Y%m%d-%H%M%S)-$$ }
  zshaddhistory_functions=( couchdb_history_add )
}

normal_history_mode

incognito_mode () {
  unset HISTFILE
  zshaddhistory_functions=()
  incognito_mode=true
}
alias incognito_mode=' incognito_mode'

couchdb_uri () {
  printf 'http://localhost:5984/%s' ${1#/}
}

couchdb_log_failure () {
  (( $+_no_couchdb_log_failure )) && return 0
  printf '%s\n' $1 >> ~$owner/.failed-couchdb.$USER.$$
  touch ~$owner/failed-couchdb
}

couchdb_request () {
  local method=$1
  local uri=$(couchdb_uri $2)
  local -a args
  args=( -s -X $method )
  [[ $method = GET ]] || args+=( --data-binary @- )
  args+=( -H 'Content-Type: application/json' )
  if [[ -n $3 ]] ; then
    if ! printf '%s' $3 | curl $args $uri ; then
      couchdb_log_failure $3
    fi
  else
    curl $args $uri
  fi
}

couchdb_get () {
  couchdb_request GET "$@"
}

couchdb_post couchdb_add_doc () {
  couchdb_request POST "$@"
}

couchdb_put couchdb_create_db () {
  couchdb_request PUT "$@"
}

couchdb_history_add () {
  local cmd=
  cmd=${1%%$'\n'}
  [[ $1 = ' '* ]] && return 0
  [[ -z "$cmd" ]] && return 0
  # print -sr -- ${1%%$'\n'}
  local -a json_params
  json_params=(
    host "$HOST"
    pwd "$PWD"
    cmd "$cmd"
    time "$EPOCHSECONDS"
    pid "$$"
    user "$USERNAME"
  )
  if (( $+commands[uuidgen] )) ; then
    if (( ! $+couchdb_session )) ; then
      couchdb_session=$(uuidgen)
    fi
  fi
  (( $+couchdb_session )) && json_params+=( session $couchdb_session )
  local json="$(json_object "${json_params[@]}")"
  couchdb_add_doc history/ $json &>/dev/null &!
  return 0
}

couchdb_history_fix () {
  local file line
  if ! couchdb_get / &>/dev/null ; then
    echo CouchDB still down
    return 1
  fi
  for file in ~/.failed-couchdb.*(N) ; do
    printf "Reprocessing %s\n" $file
    while read -r line ; do
      _no_couchdb_log_failure=1 couchdb_add_doc history/ $line 2>/dev/null
    done < $file | perl -lnwe 'BEGIN { $err = 0; }
    print;
    /"error":/ and $err = 1;
    END { exit $err }' && rm -f $file || return 1
  done && rm ~/failed-couchdb
}
alias fix_couchdb_history=' couchdb_history_fix'
