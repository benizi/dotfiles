#compdef mux

__mux_sessions() {
  local ret=0
  local -a configs
  configs=( $(_call_program mux mux completions start) )

  case "${words[2]}" in
    (start)
      local -a running
      running=( $(_call_program tm tm ls) )
      running=( ${running:*configs} )
      configs=( ${configs:|running} )
      ;;
  esac

  _describe -t mux-configs 'mux configs' configs
  (( ret += $? )) || :
  (( $#running )) || return $ret

  _describe -t mux-running 'running mux sessions' running
  (( ret += $? )) || :
  return $ret
}

__mux_commands() {
  local -a cmds
  cmds=(
    'start:Start a mux session'
    'parse:Print the configuration for a session'
  )
  _describe -t mux-commands 'mux commands' cmds
}

_mux() {
  local state ret=1
  _arguments -C \
    '(-):command:->command' \
    '(-)*:options:->options'
  ret=$?

  case $state in
    (command) __mux_commands ; : ((ret+=$?)) ;;
    (options) __mux_sessions ; : ((ret+=$?)) ;;
  esac

  return $ret
}

_mux "$@"
