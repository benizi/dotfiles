# TODO: vcs_info stuff
# autoload -Uz vcs_info
# zstyle ':vcs_info:*' disable cdv darcs mtn p4 svk tla
function __i_am_admin () {
	local admin=1
	[ -n "$INCYG" -a "$USERNAME" = "Administrator" ] && admin=0
	[ -n "$INCYG" ] && [[ "$(id)" = *,0'(root)',* ]] && admin=0
	[ "$UID" = "0" ] && admin=0
	return $admin
}
function __setup_prompt () {
setopt promptsubst
local _ps_color='$PSCOLORNORM'
(( $+termcap[Co] )) && (( $termcap[Co] > 8 )) || _ps_color='$PSCOLORLO'
__i_am_admin && _ps_color='${PSCOLORROOT-$INVERSE$BOLD'$_ps_color'}'
__i_am_admin && _pschar='#' || _pschar='$'
local _screen=""
if [ -n "$STY" ] ; then
	_screen="$STY"
	[[ $_screen = [0-9]*.* ]] && _screen="${_screen[(ws:.:)2,-1]}"
	local _host=$(print -P '%m')
	[[ $_screen = *.$_host ]] && _screen=$_screen:r
	_screen="[$_screen]"
fi
local -a _extra

local -a test_git
test_git=( $PWD(N) )
local -A added
local n=0 git_dir=
while (( $#test_git && n < 20 )) ; do
	local d=$test_git[1]
	shift test_git
	n=$(( n + 1 ))
	[[ -d $d/.git ]] && git_dir=$d/.git && break
	local -a add
	add=( $d:h $d/./..(+A,N) )
	for d in $add ; do
		(( $+added[(e)$d] )) && continue
		test_git+=( $d )
		added[$d]=1
	done
done
if (( $#git_dir )) ; then
	local -a pretty_git
	local dir=$(cd $git_dir:h ; print -P '%~')
	[[ $dir = $(print -P '%~') ]] || pretty_git+=( $dir )
	local branch="$(git --git-dir=$git_dir branch | grep '^[*]' | cut -c3-)"
	[[ "$branch" = master ]] || pretty_git+=( $branch )
	(( $#pretty_git )) || pretty_git+=( . )
	_extra+=( ${(j.:.)pretty_git} )
fi
[[ ! -e $PWD ]] && _extra+=( "!deleted!" )
(( $#_extra )) && __extra="[$_extra]" || __extra=''
PROMPT='%{${PSCOLOR}'$_ps_color'%}%n@%m'$_screen' %~'$__extra$_pschar'%{$NOCOLOR%} '
}

TITLESEP='│' # ceçi n'est pas un pipe
(( $+INCYG || $+STY )) && TITLESEP='|'
[[ $TERM = (screen|cygwin)* ]] && TITLESEP='|'
function fancytitle () {
	local host c=$TITLESEP
	host="%m $c "
	case "$DISPLAY" in
		:0*|localhost:*) [ -z "$SSH_CLIENT" ] && host="" ;;
	esac
	local extra=
	__i_am_admin && extra="ROOT $c "
	printf "${TITLE}%s%s${ENDTITLE}" $1 "$(print -nP "$extra$host"'%~ $c %n${STY+ $c $STY}')"
}
function term_with_title () {
	(( $+terminfo[tsl] )) || return 1
	if [ -n "$NOTITLE" ] ; then return 1 ; fi
	return 0
}
function preexec () {
	term_with_title || return
	fancytitle "$1 $TITLESEP "
}
function precmd () {
	__setup_prompt
	term_with_title || return
	fancytitle ""
}
() {
function zle-line-init zle-keymap-select {
	local -A seqs
	if [[ $TERM = rxvt* ]] ; then
		seqs+=( cmd $'\e]12;1\a' )
		seqs+=( ins $'\e]12;0\a' )
	else
		seqs+=( cmd $terminfo[cvvis] )
		seqs+=( ins $terminfo[cnorm] )
	fi
	case $KEYMAP in
		vicmd) print -rn -- $seqs[cmd] ;;
		main|viins) print -rn -- $seqs[ins] ;;
	esac
}
# need line-init for cancelled commands
zle -N zle-line-init
zle -N zle-keymap-select
}
