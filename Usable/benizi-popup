sub open_in_browser {
	my ($self, $url) = @_;
	$self->exec_async('xdg-open', $url)
}

sub browser_menu_item {
	my ($self, $url) = @_;
	( $url => sub { open_in_browser $self, $url } );
}

sub on_start {
	my $self = shift;
	my $open_in_browser = sub {
		my $url = shift;
		return ($url, sub {  });
	};
	push @{$self->{term}{selection_popup_hook}}, sub {
		/^\d+$/ or return;
		browser_menu_item $self, "http://benizi.com/cgi/env?$_"
	}, sub {
		/\A[+]--/ or return;
		'detablefy --min' => sub {
			if (s/\A([+](?:-+[+])+)\s*$(.*)\1//sm) {
				my ($hdr,$body) = ($1,$2);
				my @cols = grep substr($hdr, $_, 1) eq '+', 0..-1+length($hdr);
				while (1) {
					$body =~ s/\A\s+//;
					last unless length $body;
					my $got = substr $body, 0, length $hdr;
					$body = substr $body, length $hdr;
					if ($got eq $hdr
							or $got eq '|'.substr($got,1,-1).'|'
						) {
						my $sep = $got eq $hdr ? '+' : '|';
						$_ .= join $sep, '', map substr($got, $cols[$_]+2, $cols[$_+1]-$cols[$_]-3), 0..$#cols-1;
						$_ .= "$sep\n";
					} else {
						$_ .= "\nGOT{$got}";
					}
				}
			} else {
				$_ = "couldn't parse $_";
			}
		}
	};
}
